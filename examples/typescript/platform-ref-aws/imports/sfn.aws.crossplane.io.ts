// generated by cdk8s
import { ApiObject, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * Activity is the Schema for the Activities API
 *
 * @schema Activity
 */
export class Activity extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Activity"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'sfn.aws.crossplane.io/v1alpha1',
    kind: 'Activity',
  }

  /**
   * Renders a Kubernetes manifest for "Activity".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: ActivityProps = {}): any {
    return {
      ...Activity.GVK,
      ...props,
    };
  }

  /**
   * Defines a "Activity" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ActivityProps = {}) {
    super(scope, id, Activity.manifest(props));
  }
}

/**
 * Activity is the Schema for the Activities API
 *
 * @schema Activity
 */
export interface ActivityProps {
  /**
   * @schema Activity#metadata
   */
  readonly metadata?: any;

  /**
   * ActivitySpec defines the desired state of Activity
   *
   * @schema Activity#spec
   */
  readonly spec?: ActivitySpec;

}

/**
 * ActivitySpec defines the desired state of Activity
 *
 * @schema ActivitySpec
 */
export interface ActivitySpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema ActivitySpec#deletionPolicy
   */
  readonly deletionPolicy?: ActivitySpecDeletionPolicy;

  /**
   * ActivityParameters defines the desired state of Activity
   *
   * @schema ActivitySpec#forProvider
   */
  readonly forProvider: ActivitySpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema ActivitySpec#providerConfigRef
   */
  readonly providerConfigRef?: ActivitySpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema ActivitySpec#providerRef
   */
  readonly providerRef?: ActivitySpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema ActivitySpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: ActivitySpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema ActivitySpecDeletionPolicy
 */
export enum ActivitySpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * ActivityParameters defines the desired state of Activity
 *
 * @schema ActivitySpecForProvider
 */
export interface ActivitySpecForProvider {
  /**
   * The name of the activity to create. This name must be unique for your AWS account and region for 90 days. For more information, see Limits Related to State Machine Executions (https://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions) in the AWS Step Functions Developer Guide. 
 A name must not contain: 
    * white space 
    * brackets < > { } [ ] 
    * wildcard characters ? * 
    * special characters " # % \ ^ | ~ ` $ & , ; : / 
    * control characters (U+0000-001F, U+007F-009F) 
 To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.
   *
   * @schema ActivitySpecForProvider#name
   */
  readonly name: string;

  /**
   * Region is which region the Activity will be created.
   *
   * @schema ActivitySpecForProvider#region
   */
  readonly region: string;

  /**
   * The list of tags to add to a resource. 
 An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide, and Controlling Access Using IAM Tags (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html). 
 Tags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @.
   *
   * @schema ActivitySpecForProvider#tags
   */
  readonly tags?: ActivitySpecForProviderTags[];

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema ActivitySpecProviderConfigRef
 */
export interface ActivitySpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema ActivitySpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema ActivitySpecProviderRef
 */
export interface ActivitySpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema ActivitySpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema ActivitySpecWriteConnectionSecretToRef
 */
export interface ActivitySpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema ActivitySpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema ActivitySpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * @schema ActivitySpecForProviderTags
 */
export interface ActivitySpecForProviderTags {
  /**
   * @schema ActivitySpecForProviderTags#key
   */
  readonly key?: string;

  /**
   * @schema ActivitySpecForProviderTags#value
   */
  readonly value?: string;

}

/**
 * StateMachine is the Schema for the StateMachines API
 *
 * @schema StateMachine
 */
export class StateMachine extends ApiObject {
  /**
   * Returns the apiVersion and kind for "StateMachine"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'sfn.aws.crossplane.io/v1alpha1',
    kind: 'StateMachine',
  }

  /**
   * Renders a Kubernetes manifest for "StateMachine".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: StateMachineProps = {}): any {
    return {
      ...StateMachine.GVK,
      ...props,
    };
  }

  /**
   * Defines a "StateMachine" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: StateMachineProps = {}) {
    super(scope, id, StateMachine.manifest(props));
  }
}

/**
 * StateMachine is the Schema for the StateMachines API
 *
 * @schema StateMachine
 */
export interface StateMachineProps {
  /**
   * @schema StateMachine#metadata
   */
  readonly metadata?: any;

  /**
   * StateMachineSpec defines the desired state of StateMachine
   *
   * @schema StateMachine#spec
   */
  readonly spec?: StateMachineSpec;

}

/**
 * StateMachineSpec defines the desired state of StateMachine
 *
 * @schema StateMachineSpec
 */
export interface StateMachineSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema StateMachineSpec#deletionPolicy
   */
  readonly deletionPolicy?: StateMachineSpecDeletionPolicy;

  /**
   * StateMachineParameters defines the desired state of StateMachine
   *
   * @schema StateMachineSpec#forProvider
   */
  readonly forProvider: StateMachineSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema StateMachineSpec#providerConfigRef
   */
  readonly providerConfigRef?: StateMachineSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema StateMachineSpec#providerRef
   */
  readonly providerRef?: StateMachineSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema StateMachineSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: StateMachineSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema StateMachineSpecDeletionPolicy
 */
export enum StateMachineSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * StateMachineParameters defines the desired state of StateMachine
 *
 * @schema StateMachineSpecForProvider
 */
export interface StateMachineSpecForProvider {
  /**
   * The Amazon States Language definition of the state machine. See Amazon States Language (https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html).
   *
   * @schema StateMachineSpecForProvider#definition
   */
  readonly definition: string;

  /**
   * Defines what execution history events are logged and where they are logged. 
 By default, the level is set to OFF. For more information see Log Levels (https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
   *
   * @schema StateMachineSpecForProvider#loggingConfiguration
   */
  readonly loggingConfiguration?: StateMachineSpecForProviderLoggingConfiguration;

  /**
   * The name of the state machine. 
 A name must not contain: 
    * white space 
    * brackets < > { } [ ] 
    * wildcard characters ? * 
    * special characters " # % \ ^ | ~ ` $ & , ; : / 
    * control characters (U+0000-001F, U+007F-009F) 
 To enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.
   *
   * @schema StateMachineSpecForProvider#name
   */
  readonly name: string;

  /**
   * Region is which region the StateMachine will be created.
   *
   * @schema StateMachineSpecForProvider#region
   */
  readonly region: string;

  /**
   * RoleARN is the ARN for the IAMRole. It has to be given directly or resolved using RoleARNRef or RoleARNSelector.
   *
   * @schema StateMachineSpecForProvider#roleArn
   */
  readonly roleArn?: string;

  /**
   * RoleARNRef is a reference to an IAMRole used to set the RoleARN.
   *
   * @schema StateMachineSpecForProvider#roleArnRef
   */
  readonly roleArnRef?: StateMachineSpecForProviderRoleArnRef;

  /**
   * RoleARNSelector selects references to IAMRole used to set the RoleARN.
   *
   * @schema StateMachineSpecForProvider#roleArnSelector
   */
  readonly roleArnSelector?: StateMachineSpecForProviderRoleArnSelector;

  /**
   * Tags to be added when creating a state machine. 
 An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide, and Controlling Access Using IAM Tags (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html). 
 Tags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @.
   *
   * @schema StateMachineSpecForProvider#tags
   */
  readonly tags?: StateMachineSpecForProviderTags[];

  /**
   * Selects whether AWS X-Ray tracing is enabled.
   *
   * @schema StateMachineSpecForProvider#tracingConfiguration
   */
  readonly tracingConfiguration?: StateMachineSpecForProviderTracingConfiguration;

  /**
   * Determines whether a Standard or Express state machine is created. You cannot update the type of a state machine once it has been created. The default is STANDARD. Possible values: STANDARD, EXPRESS
   *
   * @schema StateMachineSpecForProvider#type
   */
  readonly type?: StateMachineSpecForProviderType;

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema StateMachineSpecProviderConfigRef
 */
export interface StateMachineSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema StateMachineSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema StateMachineSpecProviderRef
 */
export interface StateMachineSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema StateMachineSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema StateMachineSpecWriteConnectionSecretToRef
 */
export interface StateMachineSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema StateMachineSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema StateMachineSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * Defines what execution history events are logged and where they are logged. 
 By default, the level is set to OFF. For more information see Log Levels (https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html) in the AWS Step Functions User Guide.
 *
 * @schema StateMachineSpecForProviderLoggingConfiguration
 */
export interface StateMachineSpecForProviderLoggingConfiguration {
  /**
   * @schema StateMachineSpecForProviderLoggingConfiguration#destinations
   */
  readonly destinations?: StateMachineSpecForProviderLoggingConfigurationDestinations[];

  /**
   * @schema StateMachineSpecForProviderLoggingConfiguration#includeExecutionData
   */
  readonly includeExecutionData?: boolean;

  /**
   * @schema StateMachineSpecForProviderLoggingConfiguration#level
   */
  readonly level?: string;

}

/**
 * RoleARNRef is a reference to an IAMRole used to set the RoleARN.
 *
 * @schema StateMachineSpecForProviderRoleArnRef
 */
export interface StateMachineSpecForProviderRoleArnRef {
  /**
   * Name of the referenced object.
   *
   * @schema StateMachineSpecForProviderRoleArnRef#name
   */
  readonly name: string;

}

/**
 * RoleARNSelector selects references to IAMRole used to set the RoleARN.
 *
 * @schema StateMachineSpecForProviderRoleArnSelector
 */
export interface StateMachineSpecForProviderRoleArnSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema StateMachineSpecForProviderRoleArnSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema StateMachineSpecForProviderRoleArnSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * @schema StateMachineSpecForProviderTags
 */
export interface StateMachineSpecForProviderTags {
  /**
   * @schema StateMachineSpecForProviderTags#key
   */
  readonly key?: string;

  /**
   * @schema StateMachineSpecForProviderTags#value
   */
  readonly value?: string;

}

/**
 * Selects whether AWS X-Ray tracing is enabled.
 *
 * @schema StateMachineSpecForProviderTracingConfiguration
 */
export interface StateMachineSpecForProviderTracingConfiguration {
  /**
   * @schema StateMachineSpecForProviderTracingConfiguration#enabled
   */
  readonly enabled?: boolean;

}

/**
 * Determines whether a Standard or Express state machine is created. You cannot update the type of a state machine once it has been created. The default is STANDARD. Possible values: STANDARD, EXPRESS
 *
 * @schema StateMachineSpecForProviderType
 */
export enum StateMachineSpecForProviderType {
  /** STANDARD */
  STANDARD = "STANDARD",
  /** EXPRESS */
  EXPRESS = "EXPRESS",
}

/**
 * @schema StateMachineSpecForProviderLoggingConfigurationDestinations
 */
export interface StateMachineSpecForProviderLoggingConfigurationDestinations {
  /**
   * @schema StateMachineSpecForProviderLoggingConfigurationDestinations#cloudWatchLogsLogGroup
   */
  readonly cloudWatchLogsLogGroup?: StateMachineSpecForProviderLoggingConfigurationDestinationsCloudWatchLogsLogGroup;

}

/**
 * @schema StateMachineSpecForProviderLoggingConfigurationDestinationsCloudWatchLogsLogGroup
 */
export interface StateMachineSpecForProviderLoggingConfigurationDestinationsCloudWatchLogsLogGroup {
  /**
   * @schema StateMachineSpecForProviderLoggingConfigurationDestinationsCloudWatchLogsLogGroup#logGroupARN
   */
  readonly logGroupARN?: string;

}

