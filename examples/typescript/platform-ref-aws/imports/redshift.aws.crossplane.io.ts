// generated by cdk8s
import { ApiObject, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * A Cluster is a managed resource that represents an AWS Redshift cluster.
 *
 * @schema Cluster
 */
export class Cluster extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Cluster"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'redshift.aws.crossplane.io/v1alpha1',
    kind: 'Cluster',
  }

  /**
   * Adds "Cluster" kind and apiVersion to props
   * @param props initialization props
   */
  public static propsWithGVK(props: ClusterProps): any {
    return {
      ...props,
      kind: 'Cluster',
      apiVersion: 'redshift.aws.crossplane.io/v1alpha1',
    };
  }

  /**
   * Defines a "Cluster" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: ClusterProps) {
    super(scope, id, Cluster.propsWithGVK(props));
  }
}

/**
 * A Cluster is a managed resource that represents an AWS Redshift cluster.
 *
 * @schema Cluster
 */
export interface ClusterProps {
  /**
   * @schema Cluster#metadata
   */
  readonly metadata?: any;

  /**
   * ClusterSpec defines the desired state of an AWS Redshift Cluster.
   *
   * @schema Cluster#spec
   */
  readonly spec: ClusterSpec;

}

/**
 * ClusterSpec defines the desired state of an AWS Redshift Cluster.
 *
 * @schema ClusterSpec
 */
export interface ClusterSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema ClusterSpec#deletionPolicy
   */
  readonly deletionPolicy?: ClusterSpecDeletionPolicy;

  /**
   * ClusterParameters define the parameters available for an AWS Redshift cluster
   *
   * @schema ClusterSpec#forProvider
   */
  readonly forProvider: ClusterSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema ClusterSpec#providerConfigRef
   */
  readonly providerConfigRef?: ClusterSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema ClusterSpec#providerRef
   */
  readonly providerRef?: ClusterSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema ClusterSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: ClusterSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema ClusterSpecDeletionPolicy
 */
export enum ClusterSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * ClusterParameters define the parameters available for an AWS Redshift cluster
 *
 * @schema ClusterSpecForProvider
 */
export interface ClusterSpecForProvider {
  /**
   * AllowVersionUpgrade indicates that major engine upgrades are applied automatically to the cluster during the maintenance window. default=true
   *
   * @schema ClusterSpecForProvider#allowVersionUpgrade
   */
  readonly allowVersionUpgrade?: boolean;

  /**
   * AutomatedSnapshotRetentionPeriod is the number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to  0 disables automated backups. default=1
   *
   * @schema ClusterSpecForProvider#automatedSnapshotRetentionPeriod
   */
  readonly automatedSnapshotRetentionPeriod?: number;

  /**
   * AvailabilityZone is the EC2 Availability Zone in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint. Example: us-east-2d Constraint: The specified Availability Zone must be in the same region as the current endpoint. The Availability Zone parameter can't be specified if the MultiAZ parameter is set to true. The specified Availability Zone must be in the same AWS Region as the current endpoint.
   *
   * @schema ClusterSpecForProvider#availabilityZone
   */
  readonly availabilityZone?: string;

  /**
   * ClusterParameterGroupName is the name of the cluster parameter group to use for the cluster. Default: The default Amazon Redshift cluster parameter group. For information about the default parameter group, go to Working with Amazon Redshift Parameter Groups (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)
   *
   * @schema ClusterSpecForProvider#clusterParameterGroupName
   */
  readonly clusterParameterGroupName?: string;

  /**
   * ClusterSecurityGroupRefs are references to ClusterSecurityGroups used to set the ClusterSecurityGroups.
   *
   * @schema ClusterSpecForProvider#clusterSecurityGroupRefs
   */
  readonly clusterSecurityGroupRefs?: ClusterSpecForProviderClusterSecurityGroupRefs[];

  /**
   * ClusterSecurityGroupSelector selects references to ClusterSecurityGroups used to set the ClusterSecurityGroups.
   *
   * @schema ClusterSpecForProvider#clusterSecurityGroupSelector
   */
  readonly clusterSecurityGroupSelector?: ClusterSpecForProviderClusterSecurityGroupSelector;

  /**
   * SecurityGroups is a list of security groups to associate with this cluster. Default: The default cluster security group for Amazon Redshift.
   *
   * @schema ClusterSpecForProvider#clusterSecurityGroups
   */
  readonly clusterSecurityGroups?: string[];

  /**
   * ClusterSubnetGroupName is the name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).
   *
   * @schema ClusterSpecForProvider#clusterSubnetGroupName
   */
  readonly clusterSubnetGroupName?: string;

  /**
   * ClusterType is the type of the cluster you want. When cluster type is specified as    * single-node, the NumberOfNodes parameter is not required.    * multi-node, the NumberOfNodes parameter is required. default=multi-node
   *
   * @schema ClusterSpecForProvider#clusterType
   */
  readonly clusterType?: ClusterSpecForProviderClusterType;

  /**
   * ClusterVersion is the version of the Amazon Redshift engine software that you want to deploy on the cluster. The version selected runs on all the nodes in the cluster. Constraints: Only version 1.0 is currently available.
   *
   * @schema ClusterSpecForProvider#clusterVersion
   */
  readonly clusterVersion?: string;

  /**
   * DBName is the name of the first database to be created when the cluster is created. To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database. For more information, go to Create a Database (https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html) in the Amazon Redshift Database Developer Guide. Constraints:    * Must contain 1 to 64 alphanumeric characters.    * Must contain only lowercase letters.    * Cannot be a word that is reserved by the service. A list of reserved    words can be found in Reserved Words (https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html)    in the Amazon Redshift Database Developer Guide. default=dev
   *
   * @schema ClusterSpecForProvider#dbName
   */
  readonly dbName?: string;

  /**
   * The Elastic IP (EIP) address for the cluster. Constraints: The cluster must be provisioned in EC2-VPC and publicly-accessible through an Internet gateway. For more information about provisioning clusters in EC2-VPC, go to Supported Platforms to Launch Your Cluster (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms) in the Amazon Redshift Cluster Management Guide.
   *
   * @schema ClusterSpecForProvider#elasticIP
   */
  readonly elasticIP?: string;

  /**
   * Encrypted defines whether your data in the cluster will be encrypted at rest or not. default=false
   *
   * @schema ClusterSpecForProvider#encrypted
   */
  readonly encrypted?: boolean;

  /**
   * EnhancedVPCRouting specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing (https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html) in the Amazon Redshift Cluster Management Guide. If this option is true, enhanced VPC routing is enabled. default=false
   *
   * @schema ClusterSpecForProvider#enhancedVPCRouting
   */
  readonly enhancedVPCRouting?: boolean;

  /**
   * FinalClusterSnapshotIdentifier is the identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, SkipFinalClusterSnapshot must be false. Constraints:    * Must be 1 to 255 alphanumeric characters.    * First character must be a letter.    * Cannot end with a hyphen or contain two consecutive hyphens.
   *
   * @schema ClusterSpecForProvider#finalClusterSnapshotIdentifier
   */
  readonly finalClusterSnapshotIdentifier?: string;

  /**
   * FinalClusterSnapshotRetentionPeriod is the number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653. default -1
   *
   * @schema ClusterSpecForProvider#finalClusterSnapshotRetentionPeriod
   */
  readonly finalClusterSnapshotRetentionPeriod?: number;

  /**
   * HSMClientCertificateIdentifier specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM.
   *
   * @schema ClusterSpecForProvider#hsmClientCertificateIdentifier
   */
  readonly hsmClientCertificateIdentifier?: string;

  /**
   * HSMConfigurationIdentifier specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
   *
   * @schema ClusterSpecForProvider#hsmConfigurationIdentifier
   */
  readonly hsmConfigurationIdentifier?: string;

  /**
   * IAMRoleRefs are references to IAMRoles used to set the IAMRoles.
   *
   * @schema ClusterSpecForProvider#iamRoleRefs
   */
  readonly iamRoleRefs?: ClusterSpecForProviderIamRoleRefs[];

  /**
   * IAMRoleSelector selects references to IAMRoles used to set the IAMRoles.
   *
   * @schema ClusterSpecForProvider#iamRoleSelector
   */
  readonly iamRoleSelector?: ClusterSpecForProviderIamRoleSelector;

  /**
   * IAMRoles is a list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request. A cluster can have up to 10 IAM roles associated with it at any time. kubebuilder:validation:MaxItems=10
   *
   * @schema ClusterSpecForProvider#iamRoles
   */
  readonly iamRoles?: string[];

  /**
   * KMSKeyID is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster with the same AWS account that owns the KMS encryption key used to encrypt the new cluster, then you can use the KMS key alias instead of the ARN for the KM encryption key.
   *
   * @schema ClusterSpecForProvider#kmsKeyID
   */
  readonly kmsKeyID?: string;

  /**
   * MaintenanceTrackName an optional parameter for the name of the maintenance track for the cluster.
   *
   * @schema ClusterSpecForProvider#maintenanceTrackName
   */
  readonly maintenanceTrackName?: string;

  /**
   * ManualSnapshotRetentionPeriod is the default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. default=1
   *
   * @schema ClusterSpecForProvider#manualSnapshotRetentionPeriod
   */
  readonly manualSnapshotRetentionPeriod?: number;

  /**
   * MasterUsername is the user name associated with the master user account for the cluster that is being created. Constraints:    * Must be 1 - 128 alphanumeric characters. The user name can't be PUBLIC.    * First character must be a letter.    * Cannot be a reserved word. A list of reserved words can be found in    Reserved Words (https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html)    in the Amazon Redshift Database Developer Guide.
   *
   * @schema ClusterSpecForProvider#masterUsername
   */
  readonly masterUsername: string;

  /**
   * NewClusterIdentifier is the new identifier you want to use for the cluster.
   *
   * @schema ClusterSpecForProvider#newClusterIdentifier
   */
  readonly newClusterIdentifier?: string;

  /**
   * NewMasterUserPassword is the new password to be associated with the master user account for the cluster that has being created. Set this value if you want to change the existing password of the cluster. Constraints:    * Must be between 8 and 64 characters in length.    * Must contain at least one uppercase letter.    * Must contain at least one lowercase letter.    * Must contain one number.    * Can be any printable ASCII character (ASCII code 33 to 126) except '    (single quote), " (double quote), \, /, @, or space.
   *
   * @schema ClusterSpecForProvider#newMasterUserPassword
   */
  readonly newMasterUserPassword?: string;

  /**
   * NodeType is the node type defining its size and compute capacity to be provisioned for the cluster. For information about node types, go to Working with Clusters (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes) in the Amazon Redshift Cluster Management Guide.
   *
   * @schema ClusterSpecForProvider#nodeType
   */
  readonly nodeType: string;

  /**
   * NumberOfNodes defines the number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. For information about determining how many nodes you need, go to Working with Clusters (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes) in the Amazon Redshift Cluster Management Guide. If you don't specify this parameter, you get a single-node cluster. When requesting a multi-node cluster, you must specify the number of nodes that you want in the cluster. default=1
   *
   * @schema ClusterSpecForProvider#numberOfNodes
   */
  readonly numberOfNodes?: number;

  /**
   * Port specifies the port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings. Part of the connection string requires the port on which the cluster will listen for incoming connections. default=5439
   *
   * @schema ClusterSpecForProvider#port
   */
  readonly port?: number;

  /**
   * PreferredMaintenanceWindow is the weekly time range (in UTC) during which automated cluster maintenance can occur. Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week. For more information about the time blocks for each region, see Maintenance Windows (https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows) in Amazon Redshift Cluster Management Guide. Constraints: Minimum 30-minute window.
   *
   * @schema ClusterSpecForProvider#preferredMaintenanceWindow
   */
  readonly preferredMaintenanceWindow?: string;

  /**
   * PubliclyAccessible is to specify if the cluster can be accessed from a public network.
   *
   * @schema ClusterSpecForProvider#publiclyAccessible
   */
  readonly publiclyAccessible?: boolean;

  /**
   * Region is the region you'd like the Cluster to be created in.
   *
   * @schema ClusterSpecForProvider#region
   */
  readonly region: string;

  /**
   * SkipFinalClusterSnapshot determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true, a final cluster snapshot is not created. If false, a final cluster snapshot is created before the cluster is deleted. The FinalClusterSnapshotIdentifier parameter must be specified if SkipFinalClusterSnapshot is false. Default: false
   *
   * @schema ClusterSpecForProvider#skipFinalClusterSnapshot
   */
  readonly skipFinalClusterSnapshot?: boolean;

  /**
   * SnapshotScheduleIdentifier is a unique identifier for the snapshot schedule.
   *
   * @schema ClusterSpecForProvider#snapshotScheduleIdentifier
   */
  readonly snapshotScheduleIdentifier?: string;

  /**
   * Tags indicates a list of tags for the clusters.
   *
   * @schema ClusterSpecForProvider#tags
   */
  readonly tags?: ClusterSpecForProviderTags[];

  /**
   * VPCSecurityGroupIDRefs are references to VPCSecurityGroups used to set the VPCSecurityGroupIDs.
   *
   * @schema ClusterSpecForProvider#vpcSecurityGroupIDRefs
   */
  readonly vpcSecurityGroupIDRefs?: ClusterSpecForProviderVpcSecurityGroupIdRefs[];

  /**
   * VPCSecurityGroupIDSelector selects references to VPCSecurityGroups used to set the VPCSecurityGroupIDs.
   *
   * @schema ClusterSpecForProvider#vpcSecurityGroupIDSelector
   */
  readonly vpcSecurityGroupIDSelector?: ClusterSpecForProviderVpcSecurityGroupIdSelector;

  /**
   * VPCSecurityGroupIDs a list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
   *
   * @schema ClusterSpecForProvider#vpcSecurityGroupIds
   */
  readonly vpcSecurityGroupIds?: string[];

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema ClusterSpecProviderConfigRef
 */
export interface ClusterSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema ClusterSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema ClusterSpecProviderRef
 */
export interface ClusterSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema ClusterSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema ClusterSpecWriteConnectionSecretToRef
 */
export interface ClusterSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema ClusterSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema ClusterSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * A Reference to a named object.
 *
 * @schema ClusterSpecForProviderClusterSecurityGroupRefs
 */
export interface ClusterSpecForProviderClusterSecurityGroupRefs {
  /**
   * Name of the referenced object.
   *
   * @schema ClusterSpecForProviderClusterSecurityGroupRefs#name
   */
  readonly name: string;

}

/**
 * ClusterSecurityGroupSelector selects references to ClusterSecurityGroups used to set the ClusterSecurityGroups.
 *
 * @schema ClusterSpecForProviderClusterSecurityGroupSelector
 */
export interface ClusterSpecForProviderClusterSecurityGroupSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema ClusterSpecForProviderClusterSecurityGroupSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema ClusterSpecForProviderClusterSecurityGroupSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * ClusterType is the type of the cluster you want. When cluster type is specified as    * single-node, the NumberOfNodes parameter is not required.    * multi-node, the NumberOfNodes parameter is required. default=multi-node
 *
 * @schema ClusterSpecForProviderClusterType
 */
export enum ClusterSpecForProviderClusterType {
  /** multi-node */
  MULTI_NODE = "multi-node",
  /** single-node */
  SINGLE_NODE = "single-node",
}

/**
 * A Reference to a named object.
 *
 * @schema ClusterSpecForProviderIamRoleRefs
 */
export interface ClusterSpecForProviderIamRoleRefs {
  /**
   * Name of the referenced object.
   *
   * @schema ClusterSpecForProviderIamRoleRefs#name
   */
  readonly name: string;

}

/**
 * IAMRoleSelector selects references to IAMRoles used to set the IAMRoles.
 *
 * @schema ClusterSpecForProviderIamRoleSelector
 */
export interface ClusterSpecForProviderIamRoleSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema ClusterSpecForProviderIamRoleSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema ClusterSpecForProviderIamRoleSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Tag represetnt a key-pair metadata assigned to a Redshift Cluster
 *
 * @schema ClusterSpecForProviderTags
 */
export interface ClusterSpecForProviderTags {
  /**
   * The key of the tag.
   *
   * @schema ClusterSpecForProviderTags#tag
   */
  readonly tag: string;

  /**
   * The value of the tag.
   *
   * @schema ClusterSpecForProviderTags#value
   */
  readonly value: string;

}

/**
 * A Reference to a named object.
 *
 * @schema ClusterSpecForProviderVpcSecurityGroupIdRefs
 */
export interface ClusterSpecForProviderVpcSecurityGroupIdRefs {
  /**
   * Name of the referenced object.
   *
   * @schema ClusterSpecForProviderVpcSecurityGroupIdRefs#name
   */
  readonly name: string;

}

/**
 * VPCSecurityGroupIDSelector selects references to VPCSecurityGroups used to set the VPCSecurityGroupIDs.
 *
 * @schema ClusterSpecForProviderVpcSecurityGroupIdSelector
 */
export interface ClusterSpecForProviderVpcSecurityGroupIdSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema ClusterSpecForProviderVpcSecurityGroupIdSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema ClusterSpecForProviderVpcSecurityGroupIdSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

