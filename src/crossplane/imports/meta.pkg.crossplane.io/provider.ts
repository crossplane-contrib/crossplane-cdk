// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * A Provider is the description of a Crossplane Provider package.
 *
 * @schema Provider
 */
export class Provider extends ApiObject {
  /**
   * Defines a "Provider" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ProviderOptions) {
    super(scope, name, {
      ...options,
      kind: 'Provider',
      apiVersion: 'meta.pkg.crossplane.io/v1alpha1',
    });
  }
}

/**
 * A Provider is the description of a Crossplane Provider package.
 *
 * @schema Provider
 */
export interface ProviderOptions {
  /**
   * @schema Provider#metadata
   */
  readonly metadata?: any;

  /**
   * ProviderSpec specifies the configuration of a Provider.
   *
   * @schema Provider#spec
   */
  readonly spec: ProviderSpec;

}

/**
 * ProviderSpec specifies the configuration of a Provider.
 *
 * @schema ProviderSpec
 */
export interface ProviderSpec {
  /**
   * Configuration for the packaged Provider's controller.
   *
   * @schema ProviderSpec#controller
   */
  readonly controller: ProviderSpecController;

  /**
   * Semantic version constraints of Crossplane that package is compatible with.
   *
   * @schema ProviderSpec#crossplane
   */
  readonly crossplane?: ProviderSpecCrossplane;

  /**
   * Dependencies on other packages.
   *
   * @schema ProviderSpec#dependsOn
   */
  readonly dependsOn?: ProviderSpecDependsOn[];

}

/**
 * Configuration for the packaged Provider's controller.
 *
 * @schema ProviderSpecController
 */
export interface ProviderSpecController {
  /**
   * Image is the packaged Provider controller image.
   *
   * @schema ProviderSpecController#image
   */
  readonly image: string;

}

/**
 * Semantic version constraints of Crossplane that package is compatible with.
 *
 * @schema ProviderSpecCrossplane
 */
export interface ProviderSpecCrossplane {
  /**
   * Semantic version constraints of Crossplane that package is compatible with.
   *
   * @schema ProviderSpecCrossplane#version
   */
  readonly version: string;

}

/**
 * Dependency is a dependency on another package. One of Provider or Configuration may be supplied.
 *
 * @schema ProviderSpecDependsOn
 */
export interface ProviderSpecDependsOn {
  /**
   * Configuration is the name of a Configuration package image.
   *
   * @schema ProviderSpecDependsOn#configuration
   */
  readonly configuration?: string;

  /**
   * Provider is the name of a Provider package image.
   *
   * @schema ProviderSpecDependsOn#provider
   */
  readonly provider?: string;

  /**
   * Version is the semantic version constraints of the dependency image.
   *
   * @schema ProviderSpecDependsOn#version
   */
  readonly version: string;

}

