// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * An IAMUser is a managed resource that represents an AWS IAM IAMUser.
 *
 * @schema IAMUser
 */
export class IamUser extends ApiObject {
  /**
   * Defines a "IAMUser" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: IamUserOptions) {
    super(scope, name, {
      ...options,
      kind: 'IAMUser',
      apiVersion: 'identity.aws.crossplane.io/v1alpha1',
    });
  }
}

/**
 * An IAMUser is a managed resource that represents an AWS IAM IAMUser.
 *
 * @schema IAMUser
 */
export interface IamUserOptions {
  /**
   * @schema IAMUser#metadata
   */
  readonly metadata?: any;

  /**
   * An IAMUserSpec defines the desired state of an IAM User.
   *
   * @schema IAMUser#spec
   */
  readonly spec: IamUserSpec;

}

/**
 * An IAMUserSpec defines the desired state of an IAM User.
 *
 * @schema IamUserSpec
 */
export interface IamUserSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema IamUserSpec#deletionPolicy
   */
  readonly deletionPolicy?: IamUserSpecDeletionPolicy;

  /**
   * IAMUserParameters define the desired state of an AWS IAM User.
   *
   * @schema IamUserSpec#forProvider
   */
  readonly forProvider: IamUserSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema IamUserSpec#providerConfigRef
   */
  readonly providerConfigRef?: IamUserSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema IamUserSpec#providerRef
   */
  readonly providerRef?: IamUserSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema IamUserSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: IamUserSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema IamUserSpecDeletionPolicy
 */
export enum IamUserSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = 'Orphan',
  /** Delete */
  DELETE = 'Delete',
}

/**
 * IAMUserParameters define the desired state of an AWS IAM User.
 *
 * @schema IamUserSpecForProvider
 */
export interface IamUserSpecForProvider {
  /**
   * The path for the user name.
   *
   * @schema IamUserSpecForProvider#path
   */
  readonly path?: string;

  /**
   * The ARN of the policy that is used to set the permissions boundary for the user.
   *
   * @schema IamUserSpecForProvider#permissionsBoundary
   */
  readonly permissionsBoundary?: string;

  /**
   * A list of tags that you want to attach to the newly created user.
   *
   * @schema IamUserSpecForProvider#tags
   */
  readonly tags?: IamUserSpecForProviderTags[];

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema IamUserSpecProviderConfigRef
 */
export interface IamUserSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamUserSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema IamUserSpecProviderRef
 */
export interface IamUserSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamUserSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema IamUserSpecWriteConnectionSecretToRef
 */
export interface IamUserSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema IamUserSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema IamUserSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * Tag represents a tag attached to a v1alpha1.User
 *
 * @schema IamUserSpecForProviderTags
 */
export interface IamUserSpecForProviderTags {
  /**
   * The key name that can be used to look up or retrieve the associated value.
   *
   * @schema IamUserSpecForProviderTags#key
   */
  readonly key: string;

  /**
   * The value associated with this tag.
   *
   * @schema IamUserSpecForProviderTags#value
   */
  readonly value: string;

}

