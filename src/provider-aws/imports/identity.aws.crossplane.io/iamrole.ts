// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * An IAMRole is a managed resource that represents an AWS IAM Role.
 *
 * @schema IAMRole
 */
export class IamRole extends ApiObject {
  /**
   * Defines a "IAMRole" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: IamRoleOptions) {
    super(scope, name, {
      ...options,
      kind: 'IAMRole',
      apiVersion: 'identity.aws.crossplane.io/v1beta1',
    });
  }
}

/**
 * An IAMRole is a managed resource that represents an AWS IAM Role.
 *
 * @schema IAMRole
 */
export interface IamRoleOptions {
  /**
   * @schema IAMRole#metadata
   */
  readonly metadata?: any;

  /**
   * An IAMRoleSpec defines the desired state of an IAMRole.
   *
   * @schema IAMRole#spec
   */
  readonly spec: IamRoleSpec;

}

/**
 * An IAMRoleSpec defines the desired state of an IAMRole.
 *
 * @schema IamRoleSpec
 */
export interface IamRoleSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema IamRoleSpec#deletionPolicy
   */
  readonly deletionPolicy?: IamRoleSpecDeletionPolicy;

  /**
   * IAMRoleParameters define the desired state of an AWS IAM Role.
   *
   * @schema IamRoleSpec#forProvider
   */
  readonly forProvider: IamRoleSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema IamRoleSpec#providerConfigRef
   */
  readonly providerConfigRef?: IamRoleSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema IamRoleSpec#providerRef
   */
  readonly providerRef?: IamRoleSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema IamRoleSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: IamRoleSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema IamRoleSpecDeletionPolicy
 */
export enum IamRoleSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = 'Orphan',
  /** Delete */
  DELETE = 'Delete',
}

/**
 * IAMRoleParameters define the desired state of an AWS IAM Role.
 *
 * @schema IamRoleSpecForProvider
 */
export interface IamRoleSpecForProvider {
  /**
   * AssumeRolePolicyDocument is the the trust relationship policy document that grants an entity permission to assume the role.
   *
   * @schema IamRoleSpecForProvider#assumeRolePolicyDocument
   */
  readonly assumeRolePolicyDocument: string;

  /**
   * Description is a description of the role.
   *
   * @schema IamRoleSpecForProvider#description
   */
  readonly description?: string;

  /**
   * MaxSessionDuration is the duration (in seconds) that you want to set for the specified role. The default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours. Default: 3600
   *
   * @schema IamRoleSpecForProvider#maxSessionDuration
   */
  readonly maxSessionDuration?: number;

  /**
   * Path is the path to the role. Default: /
   *
   * @schema IamRoleSpecForProvider#path
   */
  readonly path?: string;

  /**
   * PermissionsBoundary is the ARN of the policy that is used to set the permissions boundary for the role.
   *
   * @schema IamRoleSpecForProvider#permissionsBoundary
   */
  readonly permissionsBoundary?: string;

  /**
   * Tags. For more information about tagging, see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the IAM User Guide.
   *
   * @schema IamRoleSpecForProvider#tags
   */
  readonly tags?: IamRoleSpecForProviderTags[];

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema IamRoleSpecProviderConfigRef
 */
export interface IamRoleSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamRoleSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema IamRoleSpecProviderRef
 */
export interface IamRoleSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamRoleSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema IamRoleSpecWriteConnectionSecretToRef
 */
export interface IamRoleSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema IamRoleSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema IamRoleSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * Tag represents user-provided metadata that can be associated with a IAM role. For more information about tagging, see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the IAM User Guide.
 *
 * @schema IamRoleSpecForProviderTags
 */
export interface IamRoleSpecForProviderTags {
  /**
   * The key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.
   *
   * @schema IamRoleSpecForProviderTags#key
   */
  readonly key: string;

  /**
   * The value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources, Accounting, and Support. Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.
 AWS always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.
   *
   * @schema IamRoleSpecForProviderTags#value
   */
  readonly value?: string;

}

