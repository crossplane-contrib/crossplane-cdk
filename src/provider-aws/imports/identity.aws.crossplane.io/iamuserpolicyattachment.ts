// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * An IAMUserPolicyAttachment is a managed resource that represents an AWS IAM User policy attachment.
 *
 * @schema IAMUserPolicyAttachment
 */
export class IamUserPolicyAttachment extends ApiObject {
  /**
   * Defines a "IAMUserPolicyAttachment" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: IamUserPolicyAttachmentOptions) {
    super(scope, name, {
      ...options,
      kind: 'IAMUserPolicyAttachment',
      apiVersion: 'identity.aws.crossplane.io/v1alpha1',
    });
  }
}

/**
 * An IAMUserPolicyAttachment is a managed resource that represents an AWS IAM User policy attachment.
 *
 * @schema IAMUserPolicyAttachment
 */
export interface IamUserPolicyAttachmentOptions {
  /**
   * @schema IAMUserPolicyAttachment#metadata
   */
  readonly metadata?: any;

  /**
   * An IAMUserPolicyAttachmentSpec defines the desired state of an IAMUserPolicyAttachment.
   *
   * @schema IAMUserPolicyAttachment#spec
   */
  readonly spec: IamUserPolicyAttachmentSpec;

}

/**
 * An IAMUserPolicyAttachmentSpec defines the desired state of an IAMUserPolicyAttachment.
 *
 * @schema IamUserPolicyAttachmentSpec
 */
export interface IamUserPolicyAttachmentSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema IamUserPolicyAttachmentSpec#deletionPolicy
   */
  readonly deletionPolicy?: IamUserPolicyAttachmentSpecDeletionPolicy;

  /**
   * IAMUserPolicyAttachmentParameters define the desired state of an AWS IAMUserPolicyAttachment.
   *
   * @schema IamUserPolicyAttachmentSpec#forProvider
   */
  readonly forProvider: IamUserPolicyAttachmentSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema IamUserPolicyAttachmentSpec#providerConfigRef
   */
  readonly providerConfigRef?: IamUserPolicyAttachmentSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema IamUserPolicyAttachmentSpec#providerRef
   */
  readonly providerRef?: IamUserPolicyAttachmentSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema IamUserPolicyAttachmentSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: IamUserPolicyAttachmentSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema IamUserPolicyAttachmentSpecDeletionPolicy
 */
export enum IamUserPolicyAttachmentSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = 'Orphan',
  /** Delete */
  DELETE = 'Delete',
}

/**
 * IAMUserPolicyAttachmentParameters define the desired state of an AWS IAMUserPolicyAttachment.
 *
 * @schema IamUserPolicyAttachmentSpecForProvider
 */
export interface IamUserPolicyAttachmentSpecForProvider {
  /**
   * PolicyARN is the Amazon Resource Name (ARN) of the IAM policy you want to attach.
   *
   * @schema IamUserPolicyAttachmentSpecForProvider#policyArn
   */
  readonly policyArn?: string;

  /**
   * PolicyARNRef references an IAMPolicy to retrieve its Policy ARN.
   *
   * @schema IamUserPolicyAttachmentSpecForProvider#policyArnRef
   */
  readonly policyArnRef?: IamUserPolicyAttachmentSpecForProviderPolicyArnRef;

  /**
   * PolicyARNSelector selects a reference to an IAMPolicy to retrieve its Policy ARN
   *
   * @schema IamUserPolicyAttachmentSpecForProvider#policyArnSelector
   */
  readonly policyArnSelector?: IamUserPolicyAttachmentSpecForProviderPolicyArnSelector;

  /**
   * UserName presents the name of the IAMUser.
   *
   * @schema IamUserPolicyAttachmentSpecForProvider#userName
   */
  readonly userName?: string;

  /**
   * UserNameRef references to an IAMUser to retrieve its userName
   *
   * @schema IamUserPolicyAttachmentSpecForProvider#userNameRef
   */
  readonly userNameRef?: IamUserPolicyAttachmentSpecForProviderUserNameRef;

  /**
   * UserNameSelector selects a reference to an IAMUser to retrieve its userName
   *
   * @schema IamUserPolicyAttachmentSpecForProvider#userNameSelector
   */
  readonly userNameSelector?: IamUserPolicyAttachmentSpecForProviderUserNameSelector;

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema IamUserPolicyAttachmentSpecProviderConfigRef
 */
export interface IamUserPolicyAttachmentSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamUserPolicyAttachmentSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema IamUserPolicyAttachmentSpecProviderRef
 */
export interface IamUserPolicyAttachmentSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamUserPolicyAttachmentSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema IamUserPolicyAttachmentSpecWriteConnectionSecretToRef
 */
export interface IamUserPolicyAttachmentSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema IamUserPolicyAttachmentSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema IamUserPolicyAttachmentSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * PolicyARNRef references an IAMPolicy to retrieve its Policy ARN.
 *
 * @schema IamUserPolicyAttachmentSpecForProviderPolicyArnRef
 */
export interface IamUserPolicyAttachmentSpecForProviderPolicyArnRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamUserPolicyAttachmentSpecForProviderPolicyArnRef#name
   */
  readonly name: string;

}

/**
 * PolicyARNSelector selects a reference to an IAMPolicy to retrieve its Policy ARN
 *
 * @schema IamUserPolicyAttachmentSpecForProviderPolicyArnSelector
 */
export interface IamUserPolicyAttachmentSpecForProviderPolicyArnSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema IamUserPolicyAttachmentSpecForProviderPolicyArnSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema IamUserPolicyAttachmentSpecForProviderPolicyArnSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * UserNameRef references to an IAMUser to retrieve its userName
 *
 * @schema IamUserPolicyAttachmentSpecForProviderUserNameRef
 */
export interface IamUserPolicyAttachmentSpecForProviderUserNameRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamUserPolicyAttachmentSpecForProviderUserNameRef#name
   */
  readonly name: string;

}

/**
 * UserNameSelector selects a reference to an IAMUser to retrieve its userName
 *
 * @schema IamUserPolicyAttachmentSpecForProviderUserNameSelector
 */
export interface IamUserPolicyAttachmentSpecForProviderUserNameSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema IamUserPolicyAttachmentSpecForProviderUserNameSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema IamUserPolicyAttachmentSpecForProviderUserNameSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

