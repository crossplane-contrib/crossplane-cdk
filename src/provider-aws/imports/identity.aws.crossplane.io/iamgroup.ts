// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * An IAMGroup is a managed resource that represents an AWS IAM IAMGroup. An IAMUser is a managed resource that represents an AWS IAM IAMUser.
 *
 * @schema IAMGroup
 */
export class IamGroup extends ApiObject {
  /**
   * Defines a "IAMGroup" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: IamGroupOptions) {
    super(scope, name, {
      ...options,
      kind: 'IAMGroup',
      apiVersion: 'identity.aws.crossplane.io/v1alpha1',
    });
  }
}

/**
 * An IAMGroup is a managed resource that represents an AWS IAM IAMGroup. An IAMUser is a managed resource that represents an AWS IAM IAMUser.
 *
 * @schema IAMGroup
 */
export interface IamGroupOptions {
  /**
   * @schema IAMGroup#metadata
   */
  readonly metadata?: any;

  /**
   * An IAMGroupSpec defines the desired state of an IAM Group.
   *
   * @schema IAMGroup#spec
   */
  readonly spec: IamGroupSpec;

}

/**
 * An IAMGroupSpec defines the desired state of an IAM Group.
 *
 * @schema IamGroupSpec
 */
export interface IamGroupSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema IamGroupSpec#deletionPolicy
   */
  readonly deletionPolicy?: IamGroupSpecDeletionPolicy;

  /**
   * IAMGroupParameters define the desired state of an AWS IAM Group.
   *
   * @schema IamGroupSpec#forProvider
   */
  readonly forProvider?: IamGroupSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema IamGroupSpec#providerConfigRef
   */
  readonly providerConfigRef?: IamGroupSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema IamGroupSpec#providerRef
   */
  readonly providerRef?: IamGroupSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema IamGroupSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: IamGroupSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema IamGroupSpecDeletionPolicy
 */
export enum IamGroupSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = 'Orphan',
  /** Delete */
  DELETE = 'Delete',
}

/**
 * IAMGroupParameters define the desired state of an AWS IAM Group.
 *
 * @schema IamGroupSpecForProvider
 */
export interface IamGroupSpecForProvider {
  /**
   * The path for the group name.
   *
   * @schema IamGroupSpecForProvider#path
   */
  readonly path?: string;

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema IamGroupSpecProviderConfigRef
 */
export interface IamGroupSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamGroupSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema IamGroupSpecProviderRef
 */
export interface IamGroupSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema IamGroupSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema IamGroupSpecWriteConnectionSecretToRef
 */
export interface IamGroupSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema IamGroupSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema IamGroupSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

