// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * A ElasticIP is a managed resource that represents an AWS VPC Security Group.
 *
 * @schema ElasticIP
 */
export class ElasticIp extends ApiObject {
  /**
   * Defines a "ElasticIP" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ElasticIpOptions) {
    super(scope, name, {
      ...options,
      kind: 'ElasticIP',
      apiVersion: 'ec2.aws.crossplane.io/v1alpha1',
    });
  }
}

/**
 * A ElasticIP is a managed resource that represents an AWS VPC Security Group.
 *
 * @schema ElasticIP
 */
export interface ElasticIpOptions {
  /**
   * @schema ElasticIP#metadata
   */
  readonly metadata?: any;

  /**
   * A ElasticIPSpec defines the desired state of a ElasticIP.
   *
   * @schema ElasticIP#spec
   */
  readonly spec: ElasticIpSpec;

}

/**
 * A ElasticIPSpec defines the desired state of a ElasticIP.
 *
 * @schema ElasticIpSpec
 */
export interface ElasticIpSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema ElasticIpSpec#deletionPolicy
   */
  readonly deletionPolicy?: ElasticIpSpecDeletionPolicy;

  /**
   * ElasticIPParameters define the desired state of an AWS Elastic IP
   *
   * @schema ElasticIpSpec#forProvider
   */
  readonly forProvider: ElasticIpSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema ElasticIpSpec#providerConfigRef
   */
  readonly providerConfigRef?: ElasticIpSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema ElasticIpSpec#providerRef
   */
  readonly providerRef?: ElasticIpSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema ElasticIpSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: ElasticIpSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema ElasticIpSpecDeletionPolicy
 */
export enum ElasticIpSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = 'Orphan',
  /** Delete */
  DELETE = 'Delete',
}

/**
 * ElasticIPParameters define the desired state of an AWS Elastic IP
 *
 * @schema ElasticIpSpecForProvider
 */
export interface ElasticIpSpecForProvider {
  /**
   * [EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.
   *
   * @schema ElasticIpSpecForProvider#address
   */
  readonly address?: string;

  /**
   * The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool
   *
   * @schema ElasticIpSpecForProvider#customerOwnedIPv4Pool
   */
  readonly customerOwnedIPv4Pool?: string;

  /**
   * Set to vpc to allocate the address for use with instances in a VPC. Default: The address is for use with instances in EC2-Classic.
   *
   * @schema ElasticIpSpecForProvider#domain
   */
  readonly domain?: ElasticIpSpecForProviderDomain;

  /**
   * The location from which the IP address is advertised. Use this parameter to limit the address to this location.
 A network border group is a unique set of Availability Zones or Local Zones from where AWS advertises IP addresses and limits the addresses to the group. IP addresses cannot move between network border groups.
 Use DescribeAvailabilityZones (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html) to view the network border groups.
 You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an InvalidParameterCombination error. For more information, see Error Codes (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html).
   *
   * @schema ElasticIpSpecForProvider#networkBorderGroup
   */
  readonly networkBorderGroup?: string;

  /**
   * The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the Address parameter instead.
   *
   * @schema ElasticIpSpecForProvider#publicIpv4Pool
   */
  readonly publicIpv4Pool?: string;

  /**
   * Region is the region you'd like your VPC to be created in.
   *
   * @schema ElasticIpSpecForProvider#region
   */
  readonly region: string;

  /**
   * Tags represents to current ec2 tags.
   *
   * @schema ElasticIpSpecForProvider#tags
   */
  readonly tags?: ElasticIpSpecForProviderTags[];

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema ElasticIpSpecProviderConfigRef
 */
export interface ElasticIpSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema ElasticIpSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema ElasticIpSpecProviderRef
 */
export interface ElasticIpSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema ElasticIpSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema ElasticIpSpecWriteConnectionSecretToRef
 */
export interface ElasticIpSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema ElasticIpSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema ElasticIpSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * Set to vpc to allocate the address for use with instances in a VPC. Default: The address is for use with instances in EC2-Classic.
 *
 * @schema ElasticIpSpecForProviderDomain
 */
export enum ElasticIpSpecForProviderDomain {
  /** vpc */
  VPC = 'vpc',
  /** standard */
  STANDARD = 'standard',
}

/**
 * Tag defines a tag
 *
 * @schema ElasticIpSpecForProviderTags
 */
export interface ElasticIpSpecForProviderTags {
  /**
   * Key is the name of the tag.
   *
   * @schema ElasticIpSpecForProviderTags#key
   */
  readonly key: string;

  /**
   * Value is the value of the tag.
   *
   * @schema ElasticIpSpecForProviderTags#value
   */
  readonly value: string;

}

